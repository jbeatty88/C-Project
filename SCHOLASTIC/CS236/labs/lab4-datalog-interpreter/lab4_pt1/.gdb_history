b Join(Relation&, Relation&) 
layout next 
r
n
n
n
n
print rowsA
n
print newHead
n
p newRel.header
n
n
n
n
print newRel
n
p newRel
n
p newRel
n
n
n
n
p newRel
n
c
exit
q
clear
q
b Join(Relation&, Relation&) 
clear
r
n
p hA
n
n
p newRel
n
n
n
n
n
n
n
n
n
n
n
n
watch newRel
n
p newRel
n
nn
n
n
n
n
p newRel
n
n
layout next 
n
n
n
n
n
n
clear
p newRel
clear
r
layout next 
clear
b Join(Relation&, Relation&) 
layout next 
r
clear
q
layout next 
b Join(Relation&, Relation&) 
r
n
n
p newRel
n
n
n
n
p newRel
n
p newRel
n
p newRel
p r
p cars
p offences 
p r.Join(car, offences)
print r.Join(cars, offences)
n
c
p r
q
r
where
q
b Join(Relation&, Relation&) 
b CombineTuples(Row&, Row&, Header&, Header&) 
b CombineSchemes(Header&, Header&) 
layout next 
r
layout next 
n
n
q
layout next 
b Join(Relation&, Relation&) 
b CombineTuples(Row&, Row&, Header&, Header&) 
b CombineSchemes(Header&, Header&) 
r
n
q
ls
clear
b TestNaturalJoinLargeHeader() 
r
layout next 
n
p offences 
make
q
